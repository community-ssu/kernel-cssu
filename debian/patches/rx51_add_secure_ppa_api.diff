Index: kernel-cssu-2.6.28/arch/arm/mach-omap2/Makefile
===================================================================
--- kernel-cssu-2.6.28.orig/arch/arm/mach-omap2/Makefile	2012-05-25 02:00:58.981062096 -0400
+++ kernel-cssu-2.6.28/arch/arm/mach-omap2/Makefile	2012-05-25 01:58:35.689019000 -0400
@@ -100,7 +100,9 @@
 					   board-rx51-peripherals.o \
 					   mmc-twl4030.o \
 					   ssi.o \
-					   usb-musb.o
+					   usb-musb.o \
+					   board-rx51-smc.o board-rx51-secure.o
+
 obj-$(CONFIG_MACH_NOKIA_RX71)		+= board-rx71.o \
 					   board-rx71-peripherals.o
 
Index: kernel-cssu-2.6.28/arch/arm/mach-omap2/board-rx51-secure.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ kernel-cssu-2.6.28/arch/arm/mach-omap2/board-rx51-secure.c	2012-05-25 01:58:35.689019000 -0400
@@ -0,0 +1,66 @@
+/*
+ * RX51 Secure PPA API.
+ *
+ * Copyright (C) 2012 Ivaylo Dimitrov <freemangordon@abv.bg>
+ *
+ *
+ * This program is free software,you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#include <asm/cacheflush.h>
+
+#include "board-rx51-secure.h"
+
+/**
+ * rx51_secure_dispatcher: Routine to dispatch secure PPA API calls
+ * @idx: The PPA API index
+ * @flag: The flag indicating criticality of operation
+ * @nargs: Number of valid arguments out of four.
+ * @arg1, arg2, arg3 args4: Parameters passed to secure API
+ *
+ * Return the non-zero error value on failure.
+ */
+u32 rx51_secure_dispatcher(u32 idx, u32 flag, u32 nargs, u32 arg1, u32 arg2,
+			   u32 arg3, u32 arg4)
+{
+	u32 ret;
+	u32 param[5];
+
+	param[0] = nargs+1;
+	param[1] = arg1;
+	param[2] = arg2;
+	param[3] = arg3;
+	param[4] = arg4;
+
+	/*
+	 * Secure API needs physical address
+	 * pointer for the parameters
+	 */
+	flush_cache_all();
+	outer_clean_range(__pa(param), __pa(param + 5));
+	ret = rx51_ppa_smc(idx, flag, __pa(param));
+
+	return ret;
+}
+
+/**
+ * rx51_secure_update_aux_cr: Routine to modify the contents of Auxiliary Control Register
+ *  @set_bits: bits to set in ACR
+ *  @clr_bits: bits to clear in ACR
+ *
+ * Return the non-zero error value on failure.
+*/
+u32 rx51_secure_update_aux_cr(u32 set_bits, u32 clear_bits)
+{
+	u32 acr;
+
+	/* Read ACR */
+	asm volatile ("mrc p15, 0, %0, c1, c0, 1" : "=r" (acr));
+	acr &= ~clear_bits;
+	acr |= set_bits;
+
+	return rx51_secure_dispatcher(RX51_PPA_WRITE_ACR,
+			       FLAG_START_CRITICAL,
+			       1,acr,0,0,0);
+}
Index: kernel-cssu-2.6.28/arch/arm/mach-omap2/board-rx51-secure.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ kernel-cssu-2.6.28/arch/arm/mach-omap2/board-rx51-secure.h	2012-05-25 01:58:35.689019000 -0400
@@ -0,0 +1,36 @@
+/*
+ * board-rx51-secure.h: OMAP Secure infrastructure header.
+ *
+ * Copyright (C) 2012 Ivaylo Dimitrov <freemangordon@abv.bg>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#ifndef OMAP_RX51_SECURE_H
+#define OMAP_RX51_SECURE_H
+
+/* HAL API error codes */
+#define  API_HAL_RET_VALUE_OK           0x00
+#define  API_HAL_RET_VALUE_FAIL         0x01
+
+/* Secure HAL API flags */
+#define FLAG_START_CRITICAL             0x4
+#define FLAG_IRQFIQ_MASK                0x3
+#define FLAG_IRQ_ENABLE                 0x2
+#define FLAG_FIQ_ENABLE                 0x1
+#define NO_FLAG                         0x0
+
+/* Secure PPA(Primary Protected Application) APIs */
+#define RX51_PPA_L2_INVAL               40
+#define RX51_PPA_WRITE_ACR              42
+
+#ifndef __ASSEMBLER__
+
+extern u32 rx51_secure_dispatcher(u32 idx, u32 flag, u32 nargs,
+                                u32 arg1, u32 arg2, u32 arg3, u32 arg4);
+extern u32 rx51_ppa_smc(u32 id, u32 flag, u32 pargs);
+
+extern u32 rx51_secure_update_aux_cr(u32 set_bits, u32 clear_bits);
+#endif /* __ASSEMBLER__ */
+#endif /* OMAP_RX51_SECURE_H */
Index: kernel-cssu-2.6.28/arch/arm/mach-omap2/board-rx51-smc.S
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ kernel-cssu-2.6.28/arch/arm/mach-omap2/board-rx51-smc.S	2012-05-25 02:09:15.244206814 -0400
@@ -0,0 +1,33 @@
+/*
+ * RX51 secure APIs file.
+ *
+ * Copyright (C) 2012 Ivaylo Dimitrov <freemangordon@abv.bg>
+ *
+ *
+ * This program is free software,you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/linkage.h>
+
+/**
+ * u32 rx51_ppa_smc(u32 id, u32 flag, u32 pargs)
+ * Low level common routine for secure HAL and PPA APIs.
+ * @id: Secure Service ID
+ * @flag: Flag to indicate the criticality of operation
+ * @pargs: Physical address of parameter list starting
+ *          with number of parametrs
+ */
+ENTRY(rx51_ppa_smc)
+        stmfd   sp!, {r4-r12, lr}
+        mov     r12, r0         @ Copy the secure service ID
+        mov     r3, r2          @ Copy the pointer to va_list in R3
+        mov     r2, r1          @ Copy the flags in R2
+        mov     r1, #0x0        @ Process ID - 0
+        mov     r6, #0xff       @ Indicate new Task call
+        dsb
+        dmb
+        .word	0xe1600071	@ SMC #1 to call PPA service - hand assembled
+        ldmfd   sp!, {r4-r12, pc}
+ENDPROC(rx51_ppa_smc)
