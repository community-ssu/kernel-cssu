--- kernel-maemo-2.6.28.orig/arch/arm/mach-omap2/omap3-opp.h
+++ kernel-maemo-2.6.28/arch/arm/mach-omap2/omap3-opp.h
@@ -4,6 +4,15 @@
 #include <mach/omap-pm.h>
 
 /* MPU speeds */
+#define S1150M  1150000000
+#define S1100M  1100000000
+#define S1000M  1000000000
+#define S950M   950000000
+#define S900M   900000000
+#define S850M   850000000
+#define S810M   810000000
+#define S750M   750000000
+#define S700M   700000000
 #define S600M   600000000
 #define S550M   550000000
 #define S500M   500000000
@@ -11,6 +20,7 @@
 #define S125M   125000000
 
 /* DSP speeds */
+#define S520M   500000000
 #define S430M   430000000
 #define S400M   400000000
 #define S360M   360000000
@@ -23,16 +33,20 @@
 
 static struct omap_opp omap3_mpu_rate_table[] = {
 	{0, 0, 0},
-	/*OPP1*/
-	{0, VDD1_OPP1, 0x1E},
-	/*OPP2*/
-	{S250M, VDD1_OPP2, 0x26},
-	/*OPP3*/
-	{S500M, VDD1_OPP3, 0x30},
-	/*OPP4*/
-	{S550M, VDD1_OPP4, 0x36},
-	/*OPP5*/
-	{S600M, VDD1_OPP5, 0x3C},
+	{0, 1, 0x14},
+	{S500M, 2, 0x1E},
+	{S550M, 3, 0x21},
+	{S600M, 4, 0x26},
+	/*overclocking*/
+	{S700M, 5, 0x2D},
+	{S750M, 6, 0x2D},
+	{S810M, 7, 0x30},
+	{S850M, 8, 0x30},
+	{S900M, 9, 0x36},
+	{S950M, 10, 0x36},
+	{S1000M, 11, 0x3C},
+	{S1100M, 12, 0x43},
+	{S1150M, 13, 0x48},
 };
 
 static struct omap_opp omap3_l3_rate_table[] = {
@@ -47,16 +61,22 @@
 
 static struct omap_opp omap3_dsp_rate_table[] = {
 	{0, 0, 0},
-	/*OPP1*/
-	{S90M, VDD1_OPP1, 0x1E},
-	/*OPP2*/
-	{S180M, VDD1_OPP2, 0x26},
-	/*OPP3*/
-	{S360M, VDD1_OPP3, 0x30},
-	/*OPP4*/
-	{S400M, VDD1_OPP4, 0x36},
-	/*OPP5*/
-	{S430M, VDD1_OPP5, 0x3C},
+	/*underclocking*/
+	{S90M, 1, 0x14},
+	/*default*/
+	{S360M, 2, 0x1E},
+	{S400M, 3, 0x21},
+	{S430M, 4, 0x26},
+	/*overclocking*/
+	{S430M, 5, 0x2D},
+	{S430M, 6, 0x2D},
+	{S430M, 7, 0x30},/*800MHz*/
+	{S520M, 8, 0x36},
+	{S520M, 9, 0x36},
+	{S520M, 10, 0x36},
+	{S520M, 11, 0x3C},
+	{S520M, 12, 0x3C},
+	{S520M, 13, 0x40},
 };
 
 #endif
--- kernel-maemo-2.6.28.orig/arch/arm/plat-omap/include/mach/omap34xx.h
+++ kernel-maemo-2.6.28/arch/arm/plat-omap/include/mach/omap34xx.h
@@ -114,7 +114,7 @@
 #define VDD2_OPP3	0x3
 
 #define MIN_VDD1_OPP	VDD1_OPP1
-#define MAX_VDD1_OPP	VDD1_OPP5
+#define MAX_VDD1_OPP	13
 #define MIN_VDD2_OPP	VDD2_OPP1
 #define MAX_VDD2_OPP	VDD2_OPP3
 
--- kernel-maemo-2.6.28.orig/arch/arm/mach-omap2/smartreflex.c
+++ kernel-maemo-2.6.28/arch/arm/mach-omap2/smartreflex.c
@@ -513,20 +513,17 @@
 	sr->req_opp_no = target_opp_no;
 
 	if (sr->srid == SR1) {
-		switch (target_opp_no) {
-		case 5:
+		switch (min(target_opp_no,4)) {
+		case 4: /*>=600*/
 			nvalue_reciprocal = sr->opp5_nvalue;
 			break;
-		case 4:
+		case 3: /*550*/
 			nvalue_reciprocal = sr->opp4_nvalue;
 			break;
-		case 3:
+		case 2: /*500*/
 			nvalue_reciprocal = sr->opp3_nvalue;
 			break;
-		case 2:
-			nvalue_reciprocal = sr->opp2_nvalue;
-			break;
-		case 1:
+		case 1: /*idle*/
 			nvalue_reciprocal = sr->opp1_nvalue;
 			break;
 		default:
--- kernel-maemo-2.6.28.orig/arch/arm/plat-omap/cpu-omap.c
+++ kernel-maemo-2.6.28/arch/arm/plat-omap/cpu-omap.c
@@ -148,10 +148,12 @@
 							VERY_HI_RATE) / 1000;
 	}
 
-	clk_set_rate(mpu_clk, policy->cpuinfo.max_freq * 1000);
+	/*clk_set_rate(mpu_clk, policy->cpuinfo.max_freq * 1000);*/
+	clk_set_rate(mpu_clk, 850000 * 1000); /*N900 hack: set default max to 850MHz */
 
 	policy->min = policy->cpuinfo.min_freq;
-	policy->max = policy->cpuinfo.max_freq;
+	/*policy->max = policy->cpuinfo.max_freq;*/
+	policy->max = 850000; /*N900 hack: set default to 500-850MHz */
 	policy->cur = omap_getspeed(0);
 
 	policy->cpuinfo.transition_latency = 300 * 1000;
--- kernel-maemo-2.6.28.orig/drivers/cpufreq/cpufreq.c
+++ kernel-maemo-2.6.28/drivers/cpufreq/cpufreq.c
@@ -465,7 +465,7 @@
 /**
  * cpufreq_per_cpu_attr_write() / store_##file_name() - sysfs write access
  */
-#define store_one(file_name, object)			\
+#define store_one(file_name, object,ignore)			\
 static ssize_t store_##file_name					\
 (struct cpufreq_policy *policy, const char *buf, size_t count)		\
 {									\
@@ -479,15 +479,16 @@
 	ret = sscanf (buf, "%u", &new_policy.object);			\
 	if (ret != 1)							\
 		return -EINVAL;						\
-									\
-	ret = __cpufreq_set_policy(policy, &new_policy);		\
+	printk(KERN_DEBUG "cpufreq: request %u -> %u\n",policy->object,new_policy.object);	\
+	if (new_policy.object != ignore && new_policy.object >= 100000)	\
+	    ret = __cpufreq_set_policy(policy, &new_policy);		\
 	policy->user_policy.object = policy->object;			\
 									\
 	return ret ? ret : count;					\
 }
 
-store_one(scaling_min_freq,min);
-store_one(scaling_max_freq,max);
+store_one(scaling_min_freq,min,600000);
+store_one(scaling_max_freq,max,600000);
 
 /**
  * show_cpuinfo_cur_freq - current CPU frequency as detected by hardware
--- kernel-maemo-2.6.28.orig/Makefile
+++ kernel-maemo-2.6.28/Makefile
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 28
-EXTRAVERSION = .10maemo
+EXTRAVERSION = .10maemo-xlv
 NAME = Erotic Pickled Herring
 
 # *DOCUMENTATION*
--- kernel-maemo-2.6.28.orig/arch/arm/mach-omap2/smartreflex.h
+++ kernel-maemo-2.6.28/arch/arm/mach-omap2/smartreflex.h
@@ -254,7 +254,7 @@
 /* XXX: end remove/move */
 
 /* SR_MAX_LOW_OPP: the highest of the "low OPPs", 1 and 2. */
-#define SR_MAX_LOW_OPP		2
+#define SR_MAX_LOW_OPP		1
 
 /* XXX: find more appropriate place for these once DVFS is in place */
 extern u32 current_vdd1_opp;
